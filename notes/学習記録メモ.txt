2024/5以降、GitHubのIssueに移行

231118
all(), any()を使おう
    all(l): lの要素が全てtrueならtrue
    any(l): lの要素が1つでもtrueならtrue
    all([i > 2 for i in l])みたいに内包表記で書ける
listとsetの計算量の違い
            追加       削除
list        O(1)       O(N)
set       O(logN)    O(logN)


231115
bit DP
    集合に対するDP．
    最も適切な順列を効率的に求めるDP
    O(n^2 * 2^n)
    巡回セールスマン問題などで使われる
networkxというライブラリがあるらしい
    https://qiita.com/kzm4269/items/081ff2fdb8a6b0a6112f
    最短経路とかの探索も容易にできるっぽい
    競プロには生かせるのか？分からないが普通の研究には便利

231101
灰色後半は文字列の扱いの問題が多い
文字列を克服すればここはいける
A~Cくらいの問題は素直に実装すればACする．計算量を気にするときだけ工夫すればいい
飛び道具を疑いすぎないこと

231030
デカい数のmodで答える問題について
割り算，累乗のmod計算を勉強した
ライブラリを作成してコピペすればアルゴリズムが使えるようにした
bit全探索の勉強．そんなに難しくなかった．
itertoolsは便利だから使いこなしたい
https://docs.python.org/ja/3/library/itertools.html
    for文の条件部分の幅が広がる

231029
各入力に対して全部出力する問題なら，
各入力は最後に受け取って関数に入れて出力
とい形が良い

231028
尺取り法をマスターする
    区間の話になったら尺取り法
    尺取り虫のように動かしていく
ダミー入れて1-indexedにする癖をつける
グローバル変数を知る
    グローバル変数は関数内でも利用できる
    しかしスコープ外ではその値は更新されない
    関数内で global var とすれば
    全体のvarが更新される
231027
PyPyの方が速いから今後使う．
Pythonを使うタイミング:
    NumPy, Scipyなどのライブラリや再帰を使うとき
PyPyの注意点:
    文字列を+で結合するのが遅いからjoin使う
    再帰関数は遅い

BFS, DFSにリストを使うとO(N)になる
dequeを使うべし（O(1)になる）
https://note.nkmk.me/python-collections-deque/

functoolsのcmp_to_keyについて
「大きい(小さい，等しい)」の定義をカスタムできる

231025
計算量について
ソートはO(N logN)
https://qiita.com/Hironsan/items/68161ee16b1c9d7b25fb

itertoolsについて学習
https://docs.python.org/ja/3/library/itertools.html
ループの書き方の幅が大きく広がるが，使わなくても書けるものも多い．
一般的でないメソッドを使うか，長くくどいコードを書くかの二択で考える．

231023
Pythonのインスタンス，クラスについて学習．

231022
BFSとDFSの勉強．理屈はわかったが，コードを書くにはPythonのクラスの理解が必要．クラスを使えるようになる．